<?xml version="1.0" encoding="UTF-8"?>
<!--
     Licensed to the ObjectStyle LLC under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ObjectStyle LLC licenses
   this file to you under the Apache License, Version 2.0 (the
   “License”); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
  -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0" xml:id="overview">
    <title>Bootique Integration with Logback</title>
    <para>As mentioned in Bootique <link
            xlink:href="http://bootique.io/docs/0/bootique-docs/index.html#logging">general
            documentation on logging</link>, standard modules rely on SLF4J loggers that can be
        easily bridged to various  advanced logging frameworks. Same maximally neutral logging
        approach is reasonable to apply in the user modules as well.</para>
    <para><link xlink:href="https://github.com/bootique/bootique-logback"
            ><code>bootique-logback</code></link> is a "drag-and-drop" module integrating Bootique
        logging with <link xlink:href="http://logback.qos.ch/">Logback logging framework</link>.
        Just like any other module, <code>bootique-logback</code> can be enabled by simply adding it
        to the <code>pom.xml</code> dependencies, assuming <code>autoLoadModules()</code> is in
        effect:<programlisting language="xml">&lt;dependency>
	&lt;groupId>io.bootique.logback&lt;/groupId>
	&lt;artifactId>bootique-logback&lt;/artifactId>
&lt;/dependency></programlisting></para>
    <para>Without further configuration it would log everything to console using INFO level.
        Configuration can be provided via YAML, as shown in the following section. Configuration
        options include per class and package log levels configuration, a choice of appenders,
        etc.</para>
</chapter>
